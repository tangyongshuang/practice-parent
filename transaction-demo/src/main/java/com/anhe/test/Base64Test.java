package com.anhe.test;

import sun.misc.BASE64Decoder;

import java.io.*;
import java.nio.file.Files;

/**
 * Created by Albert.Tang on 2019/5/6 7:01 PM.
 */
public class Base64Test {
    public static void main(String[] args) throws IOException {
        String before="";
        BASE64Decoder decoder = new BASE64Decoder();
        byte[] decodeBuffer = decoder.decodeBuffer(before);
        ByteArrayInputStream inputStream = new ByteArrayInputStream(decodeBuffer);

        OutputStream outputStream = new FileOutputStream("/Users/circleus/Documents/tmp/20190506/my.pdf");
        byte[] buff = new byte[1024];
        int len = -1;
        while ((len = inputStream.read(buff)) != -1) {
            outputStream.write(buff);
        }
        outputStream.flush();
        inputStream.close();
        outputStream.close();
    }
}
